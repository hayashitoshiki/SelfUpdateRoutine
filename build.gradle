// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext {
        kotlin_version = "1.5.21"
        dokka_version = '0.9.17'
        hilt_version = '2.37'
        compose_version = '1.0.2'
    }
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.0.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:2.4.0-alpha04"
        classpath "org.jetbrains.dokka:dokka-android-gradle-plugin:${dokka_version}"
        classpath "com.google.dagger:hilt-android-gradle-plugin:$hilt_version"
        classpath 'com.google.gms:google-services:4.3.10'
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
        maven { url "https://jitpack.io" }
        jcenter() // Warning: this repository is going to shut down soon
    }
}

subprojects {
    switch (project.name) {
        case 'app':
            apply plugin: 'com.android.application'
            break
        default:
            apply plugin: 'com.android.library'
            break
    }

    apply plugin: 'kotlin-android'
    apply plugin: 'kotlin-kapt'
    apply plugin: 'dagger.hilt.android.plugin'

    android {
        compileSdkVersion 30
        buildToolsVersion "30.0.3"

        defaultConfig {
            minSdkVersion 26
            targetSdkVersion 30
            versionCode 1
            versionName "1.0"

            // For LeakCanary in instrumentation tests
            testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
            testInstrumentationRunnerArgument "listener", "leakcanary.FailTestOnLeakRunListener"

            testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
            javaCompileOptions {
                annotationProcessorOptions {
                    arguments += [
                            "room.schemaLocation"  : "$projectDir/schemas".toString(),
                            "room.incremental"     : "true",
                            "room.expandProjection": "true"]
                }
            }
        }

        buildTypes {
            release {
                minifyEnabled false
                proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            }
            debug {
                testCoverageEnabled true
            }
        }
        lintOptions {
            checkReleaseBuilds false
            abortOnError false
            xmlReport true
        }
        testOptions {
            unitTests.includeAndroidResources = true
        }
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_11
            targetCompatibility JavaVersion.VERSION_11
        }
        kotlinOptions {
            jvmTarget = '11'
        }
        buildFeatures {
            dataBinding true
            viewBinding true
        }
    }

    configurations { ktlint }

    afterEvaluate {
        check.dependsOn ktlint
    }

    dependencies {
        implementation "org.jetbrains.kotlin:kotlin-reflect:1.5.21"
        implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
        implementation 'androidx.core:core-ktx:1.6.0'
        implementation 'androidx.appcompat:appcompat:1.3.1'
        implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
        implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'
        implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'

        testImplementation 'junit:junit:4.+'
        androidTestImplementation 'androidx.test.ext:junit:1.1.3'
        androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

        def leakcanary_version = '2.6'
        debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakcanary_version"
        androidTestImplementation "com.squareup.leakcanary:leakcanary-android-instrumentation:$leakcanary_version"
        // Room
        def room_version = "2.3.0"
        implementation "androidx.room:room-runtime:$room_version"
        implementation "androidx.room:room-ktx:$room_version"
        kapt "androidx.room:room-compiler:$room_version"
        // timber
        def timber_version = "4.7.1"
        implementation "com.jakewharton.timber:timber:$timber_version"

        // ktLint
        def ktLint_version = "0.41.0"
        ktlint "com.pinterest:ktlint:$ktLint_version"
        // Hilt
        implementation "com.google.dagger:hilt-android:$rootProject.hilt_version"
        kapt "com.google.dagger:hilt-android-compiler:$rootProject.hilt_version"
        // kotlinx-serialization
        implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.2'

        // test
        testImplementation 'junit:junit:4.13.1'
        testImplementation "com.nhaarman:mockito-kotlin:1.5.0"
        // livedata-test
        def livedata_test_version = "2.1.0"
        testImplementation "androidx.arch.core:core-common:$livedata_test_version"
        testImplementation "androidx.arch.core:core-runtime:$livedata_test_version"
        testImplementation "androidx.arch.core:core-testing:$livedata_test_version"
        // coroutine-test
        testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.0'
        testImplementation 'io.mockk:mockk:1.10.3-jdk8'
        // robolectric
        testImplementation "androidx.test:core-ktx:1.4.0"
        testImplementation 'androidx.test.espresso:espresso-core:3.4.0'
        testImplementation("org.robolectric:robolectric:4.5.1") {
            exclude group: 'org.apache.maven', module: 'maven-artifact'
            exclude group: 'org.apache.maven', module: 'maven-artifact-manager'
            exclude group: 'org.apache.maven', module: 'maven-model'
            exclude group: 'org.apache.maven', module: 'maven-plugin-registry'
            exclude group: 'org.apache.maven', module: 'maven-profile'
            exclude group: 'org.apache.maven', module: 'maven-project'
            exclude group: 'org.apache.maven', module: 'maven-settings'
            exclude group: 'org.apache.maven', module: 'maven-error-diagnostics'
            exclude group: 'org.apache.maven', module: 'maven-ant-tasks'
            exclude group: "org.apache.maven.wagon"
            exclude group: "org.codehaus.plexus"
        }
    }

    // ktLint検出
    task ktlint(type: JavaExec, group: "verification") {
        description = "Check Kotlin code style."
        main = "com.pinterest.ktlint.Main"
        classpath = configurations.ktlint
        args "--android", "--color", "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/reports/ktlint-results.xml", "src/**/*.kt"
        ignoreExitValue true
    }

    // ktLintフォーマット
    task ktlintFormat(type: JavaExec, group: "formatting") {
        description = "Fix Kotlin code style deviations."
        main = "com.pinterest.ktlint.Main"
        classpath = configurations.ktlint
        args "-F", "--android", "src/**/*.kt"
        ignoreExitValue true
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}